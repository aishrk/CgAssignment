package com.example.catalog.controller;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.reactive.function.client.WebClient;

import com.example.catalog.entity.CatalogIteams;
import com.example.catalog.entity.Movies;
import com.example.catalog.entity.Rating;
import com.example.catalog.entity.userRating;
import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

@RestController
@RequestMapping("/catalogs")
public class MovieCatalogController {
	// instance object
	@Autowired
	private RestTemplate restTemplate;
	@Autowired
	private WebClient.Builder webclientBuilder;

	@RequestMapping("/{userId}")
	@HystrixCommand(fallbackMethod = "getFallbackCatalogs")
	public List<CatalogIteams> getCatalogs(@PathVariable("userId") String userId) {

		// get all rated movies Ids
		userRating userRatings = getUserRating(userId);
		return userRatings.getUserRating().stream().map(rating -> {
			return getCatalogitems(rating);
		}).collect(Collectors.toList());

	}
    //fallback method for getCatalogs
	public List<CatalogIteams> getFallbackCatalogs(@PathVariable("userId") String userId) {
		return Arrays.asList(new CatalogIteams("no movie", "", 0));
	}
	@HystrixCommand(fallbackMethod = "getFallbackCatalogitems")
	private CatalogIteams getCatalogitems(Rating rating) {
		Movies movie = restTemplate.getForObject("http://movie-info-service/movies/" + rating.getMovieId(),
				Movies.class);
		return new CatalogIteams(movie.getName(), movie.getDescription(), rating.getRating());
	}
	 //fallback method for getCatalogitems
	private CatalogIteams getFallbackCatalogitems(Rating rating) {
		return new CatalogIteams("Movie Not found ","", rating.getRating());
		}
	
	@HystrixCommand(fallbackMethod = "getFallbackUserRating")
	private userRating getUserRating(String userId) {
		return restTemplate.getForObject("http://rating-data-service/ratingdata/user/" + userId, userRating.class);
	}

   //fallback method for getUserRating
	private userRating getFallbackUserRating(String userId) {
		userRating rating= new userRating();
		rating.setUserId(userId);
		rating.setUserRating(Arrays.asList("0",0));
		
		
		}
}
